from tkinter import Tk, Canvas, BOTH
from numba import *
from time import *
import numpy as np
root = Tk()

width,height = 1024,768
xaxis, yaxis = width // 2, height // 2
root.geometry(f"{width}x{height}+0+0")
scale = 350
iterations = 512
canvas = Canvas()
canvas.pack(fill=BOTH, expand=1)

@jit(fastmath=True)
def mathfr(ix,iy):
    z = np.csingle(0+0j)
    c = np.complex((ix - xaxis), (iy - yaxis))
    for i in range(iterations):
        z = np.multiply(z, z)+ np.divide(c, scale)
        #z = z * z + c/scale
        if (z.imag) > 2.0:
            return True



def fractal():
    for iy in range(height):
        for ix in range(width):
            if (mathfr(ix,iy)):
                canvas.create_rectangle(ix, iy, ix + 1, iy + 1)
        if not (iy%32):
            root.update()




start_Time = time()
fractal()
print(time()-start_Time)
