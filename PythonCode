
import pygame as pg
from pygame import gfxdraw
import encodings
import time
t1 = time.time()

width, height = 1900,1060
screen = pg.display.set_mode((width, height))
xaxis,yaxis = width//2, height//2

scale = 450
iterations = 40

game = True
xi = 0


# def formula(z,c,xi):
#    return z * z + c + xi

def fractal(height,width,xaxis,yaxis,screen,scale,iterations,xi):
    screen.fill((130, 0, 0))
    for iy in range(height):

        for ix in range(width):

            z = 0+0j
            c = complex(float(ix-xaxis)/scale, float(iy-yaxis)/scale)
            x = c.real

            q = (x-0.25)*(x-0.25)+c.imag*c.imag
            #if (q*(q+(x-0.25)) > c.imag*c.imag/4.0 or (x+1.0)*(x+1.0) + c.imag*c.imag <0.063):

            for i in range(iterations):
                #z += formula(z,c,xi)
                z = z**2 + c + xi
                if abs(z) > 2:

                    gfxdraw.pixel(screen, ix, iy, (0,0,0))
                    break
        pg.display.update()


while game:


    fractal(height,width,xaxis,yaxis,screen,scale,iterations,xi)

    for event in pg.event.get():
        if event.type == pg.KEYDOWN:
            if event.key == pg.K_d:
                xi+=0.1
            elif event.key == pg.K_BACKSPACE:
                game = False
    print(time.time() - t1)



